function Employee(id, name, basicSalary) {
	this.id = id; // Instance Var =  Local Var
	this.name = name;
	this.basicSalary = basicSalary;
	/*this.hra = function(){
	let x = 10;
	x++;
	return this.basicSalary * 0.30;
	}*/
	// return this;
}
Employee.prototype.hra = function() {
	return this.basicSalary * 0.30;
}

Employee.prototype.da = function() {
	return this.basicSalary * 0.20;
}

Employee.prototype.ta = function() {
	return this.basicSalary * 0.10;
}

Employee.prototype.pf = function() {
	return this.basicSalary * 0.05;
}

Employee.prototype.gs = function() {
	return this.basicSalary + this.hra() + this.da() + this.ta() - this.pf();
}

Employee.prototype.ns = function() {
	return this.gs() - (this.gs() * 0.10);
}

ƒ () {
	return this.gs() - (this.gs() * 0.10);
}
Employee.prototype.print = function(){
console.log(`
				Id is $ {
					this.id
				}
				Name is $ {
					this.name
				}
				Basic Salary is $ {
					this.basicSalary
				}
				HRA is $ {
					this.hra()
				}
				DA is $ {
					this.da()
				}
				TA is $ {
					this.ta()
				}
				PF is $ {
					this.pf()
				}
				GS is $ {
					this.gs()
				}
				NS is $ {
					this.ns()
				}
				`)

}
ƒ (){
console.log(`
				Id is $ {
					this.id
				}
				Name is $ {
					this.name
				}
				Basic Salary is $ {
					this.basicSalary
				}
				HRA is $ {
					this.hra()
				}
				DA is $ {
					thi…
var ram = new Employee(1001, "Ram", 9999);
undefined
ram
Employee {id: 1001, name: "Ram", basicSalary: 9999}
ram.print()
VM154:2 
				Id is $ {
					this.id
				}
				Name is $ {
					this.name
				}
				Basic Salary is $ {
					this.basicSalary
				}
				HRA is $ {
					this.hra()
				}
				DA is $ {
					this.da()
				}
				TA is $ {
					this.ta()
				}
				PF is $ {
					this.pf()
				}
				GS is $ {
					this.gs()
				}
				NS is $ {
					this.ns()
				}
				
undefined
